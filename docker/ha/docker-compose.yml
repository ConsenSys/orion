---
version: '3'
services:
  nginx:
    depends_on:
      - orion_1
      - orion_2
    image: nginx:latest
    container_name: load_balancer
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:8080
      - 8888:8888

  postgres:
    image: postgres:12
    container_name: postgres
    ports:
      - 5432
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust

  orion_1:
    depends_on:
      - postgres
    image: $DOCKER_IMAGE
    container_name: orion_1
    volumes:
      - ./orion.conf:/etc/orion.conf
      - ./keys:/var/keys
      - orion1-data:/data
    command: /etc/orion.conf
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/upcheck"]
      interval: 10s
      timeout: 10s
      retries: 10
  # Same configuration as orion_1, but with environment variables
  orion_2:
    image: $DOCKER_IMAGE
    container_name: orion_2
    volumes:
      - ./keys:/var/keys
      - orion2-data:/data
    environment:
      - ORION_NODEURL=http://load_balancer:8080/
      - ORION_NODEPORT=8080
      - ORION_NODENETWORKINTERFACE=0.0.0.0
      - ORION_CLIENTURL=http://load_balancer:8888/
      - ORION_CLIENTPORT=8888
      - ORION_CLIENTNETWORKINTERFACE=0.0.0.0
      - ORION_PUBLICKEYS=/var/keys/nodeKey.pub
      - ORION_PRIVATEKEYS=/var/keys/nodeKey.key
      - ORION_PASSWORDS=/var/keys/passwordFile
      - ORION_WORKDIR=/data
      - ORION_TLS=off
      - ORION_STORAGE=sql:jdbc:postgresql://postgres:5432/payloaddb
      - ORION_KNOWNNODESSTORAGE=sql:jdbc:postgresql://postgres:5432/knownnodes

    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/upcheck"]
      interval: 10s
      timeout: 10s
      retries: 10

volumes:
  orion1-data:

  orion2-data: