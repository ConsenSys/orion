# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    steps:
      - checkout

      - run: 
          name: Install Sodium Dependencies
          command: | 
            sudo apt-get install -y autoconf automake libtool make tar gcc-multilib libaio-dev libsodium-dev;
          when: always

      
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
         name: Run gradle build
         command: ./gradlew build bintrayUpload

      - run:
          name: Save test results
          command: |
             mkdir -p ~/junit/
             find . -type f -regex ".*/build/test-results/test/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - persist_to_workspace:
          root: ~/repo
          paths:
            - build/version
            - build/distributions/*

  upload-distribution:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Upload skinny targz file to Bintray
          command: "./scripts/upload-to-bintray.sh $BINTRAY_USER $BINTRAY_KEY build/distributions/orion-$(cat build/version).tar.gz consensys binaries orion $(cat build/version)"
      - run:
          name: Upload skinny zip file to Bintray
          command: "./scripts/upload-to-bintray.sh $BINTRAY_USER $BINTRAY_KEY build/distributions/orion-$(cat build/version).zip consensys binaries orion $(cat build/version)"
      - run:
          name: Upload fat-jar targz file to Bintray
          command: "./scripts/upload-to-bintray.sh $BINTRAY_USER $BINTRAY_KEY build/distributions/orion-fat-jar-$(cat build/version).tar.gz consensys binaries orion $(cat build/version)"
      - run:
          name: Upload fat-jar zip file to Bintray
          command: "./scripts/upload-to-bintray.sh $BINTRAY_USER $BINTRAY_KEY build/distributions/orion-fat-jar-$(cat build/version).zip consensys binaries orion $(cat build/version)"

workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - upload-distribution:
          requires:
            - build
          filters:
            branches:
              only: master
